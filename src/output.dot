digraph {
 node0 [label="CompilationUnit"]
 node1 [label="OrdinaryCompilationUnit"]
 node0 -> node1
 node2 [label="TopLevelClassOrInterfaceDeclaration"]
 node1 -> node2
 node3 [label="NormalClassDeclaration"]
 node2 -> node3
 node4 [label="CLASS"]
 node3 -> node4
 node5 [label="IDENTIFIER(Array)"]
 node3 -> node5
 node6 [label="ClassBody"]
 node3 -> node6
 node7 [label="MethodDeclaration"]
 node6 -> node7
 node8 [label="PUBLIC"]
 node7 -> node8
 node9 [label="STATIC"]
 node7 -> node9
 node10 [label="INT"]
 node7 -> node10
 node11 [label="MethodDeclarator"]
 node7 -> node11
 node12 [label="IDENTIFIER(main)"]
 node11 -> node12
 node13 [label="FormalParameter"]
 node11 -> node13
 node14 [label="STRING"]
 node13 -> node14
 node15 [label="VariableDeclaratorId"]
 node13 -> node15
 node16 [label="IDENTIFIER(args)"]
 node15 -> node16
 node17 [label="[]"]
 node15 -> node17
 node18 [label="Block"]
 node7 -> node18
 node19 [label="{"]
 node18 -> node19
 node20 [label="BlockStatements"]
 node18 -> node20
 node21 [label="LocalVariableDeclaration"]
 node20 -> node21
 node22 [label="INT"]
 node21 -> node22
 node23 [label="VariableDeclaratorList"]
 node21 -> node23
 node24 [label="="]
 node23 -> node24
 node25 [label="VariableDeclaratorId"]
 node24 -> node25
 node26 [label="IDENTIFIER(a)"]
 node25 -> node26
 node27 [label="Expression"]
 node24 -> node27
 node28 [label=">>>"]
 node27 -> node28
 node29 [label="INT_LITERAL(23)"]
 node28 -> node29
 node30 [label="INT_LITERAL(3)"]
 node28 -> node30
 node31 [label="LocalVariableDeclaration"]
 node20 -> node31
 node32 [label="INT"]
 node31 -> node32
 node33 [label="VariableDeclaratorList"]
 node31 -> node33
 node34 [label="="]
 node33 -> node34
 node35 [label="VariableDeclaratorId"]
 node34 -> node35
 node36 [label="IDENTIFIER(b)"]
 node35 -> node36
 node37 [label="Expression"]
 node34 -> node37
 node38 [label=">>>"]
 node37 -> node38
 node39 [label="-"]
 node38 -> node39
 node40 [label="INT_LITERAL(25)"]
 node39 -> node40
 node41 [label="INT_LITERAL(3)"]
 node38 -> node41
 node42 [label="ReturnStatement"]
 node20 -> node42
 node43 [label="RETURN"]
 node42 -> node43
 node44 [label="Expression"]
 node42 -> node44
 node45 [label="INT_LITERAL(0)"]
 node44 -> node45
 node46 [label="}"]
 node18 -> node46
 }
